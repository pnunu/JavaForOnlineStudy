<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:p="http://www.springframework.org/schema/p"
xmlns:aop="http://www.springframework.org/schema/aop"
xmlns:tx="http://www.springframework.org/schema/tx"
xmlns:context="http://www.springframework.org/schema/context"
xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop.xsd">
	
	<!-- 读取bd.properties -->
	<context:property-placeholder location="classpath:db.properties"/>
	
	<!-- 数据源 -->
	<!-- 
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${driver}"></property>
		<property name="url" value="${url}"></property>
		<property name="username" value="${user}"></property>
		<property name="password" value="${password}"></property>
	</bean>
	 -->

	<!-- 配置数据源c3p0，连接池 -->  
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">  
        <property name="driverClass">  
            <value>${driver}</value>  
        </property>  
        <property name="jdbcUrl">  
            <value>${url}</value>  
        </property>  
        <!--MySQL数据库的用户名 -->  
        <property name="user">  
            <value>${user}</value>  
        </property>  
        <!--MySQL数据库 密码 -->  
        <property name="password">  
            <value>${password}</value>  
        </property>  
        <!--连接池中保留的最小连接数。 -->  
        <property name="minPoolSize">  
            <value>5</value>  
        </property>  
        <!--连接池中保留的最大连接数。Default: 15 -->  
        <property name="maxPoolSize">  
            <value>30</value>  
        </property>  
        <!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->  
        <property name="initialPoolSize">  
            <value>10</value>  
        </property>  
        <!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->  
        <property name="maxIdleTime">  
            <value>60</value>  
        </property>  
        <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->  
        <property name="acquireIncrement">  
            <value>5</value>  
        </property>  
        <!--JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的 statements属于单个connection而不是整个连接池。
		所以设置这个参数需要考虑到多方面的因素。如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0 -->  
        <property name="maxStatements">  
            <value>0</value>  
        </property>  
        <!--每60秒检查所有连接池中的空闲连接。Default: 0 -->  
        <property name="idleConnectionTestPeriod">  
            <value>60</value>  
        </property>  
        <!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->  
        <property name="acquireRetryAttempts">  
            <value>30</value>  
        </property>  
        <!--获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效 保留，并在下次调用getConnection()的时候继续尝试获取连接。
        	如果设为true，那么在尝试获取连接失败后该数据源将申明已断开并永久关闭。Default: false -->  
        <property name="breakAfterAcquireFailure">  
            <value>true</value>  
        </property>  
        <!--因性能消耗大请只在需要的时候使用它。如果设为true那么在每个connection提交的 时候都将校验其有效性。
        	建议使用idleConnectionTestPeriod或automaticTestTable 等方法来提升连接测试的性能。Default: false -->  
        <property name="testConnectionOnCheckout">  
            <value>false</value>  
        </property>  
    </bean>  


	<!-- 整合mybatis：SqlSessionFactory -->
	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<!-- 要为指定包下的所有类全部起别名：类名首字符小写User ： user -->
		<property name="typeAliasesPackage" value="pnunu.ssm.po"/>
		<!-- 引入映射文件 -->
		<property name="mapperLocations" value="classpath:pnunu/ssm/mapper/impl/*.xml" />
	</bean>

	<!-- 创建Mapper接口的实现类的代理对象 -->
	<!-- mapper 扫描器-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- basePackage：制定扫描的根路径-->
		<property name="basePackage" value="pnunu.ssm.mapper"></property>
	</bean>
	
	<!-- 事务管理 -->
	<bean id="tx" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 声明式注解事务支持 -->
	<tx:annotation-driven transaction-manager="tx"/>

</beans>